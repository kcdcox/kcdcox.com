{"remainingRequest":"/Users/kevincox/Desktop/word-flow/client/node_modules/babel-loader/lib/index.js!/Users/kevincox/Desktop/word-flow/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/kevincox/Desktop/word-flow/client/src/PostService.js","dependencies":[{"path":"/Users/kevincox/Desktop/word-flow/client/src/PostService.js","mtime":1552262319752},{"path":"/Users/kevincox/Desktop/word-flow/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/word-flow/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/word-flow/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/kevincox/Desktop/word-flow/client/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kevincox/Desktop/word-flow/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"/Users/kevincox/Desktop/word-flow/client/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"/Users/kevincox/Desktop/word-flow/client/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevincox/Desktop/word-flow/client/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar axios = require('axios'); //Full Stack Vue.js, Express & MongoDB [2] - Vue Frontend\n\n\nvar url = 'http://localhost:5000/api/posts/';\n\nvar PostService =\n/*#__PURE__*/\nfunction () {\n  function PostService() {\n    _classCallCheck(this, PostService);\n  }\n\n  _createClass(PostService, null, [{\n    key: \"getPosts\",\n    // Get Posts\n    value: function getPosts() {\n      return new _Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resolve, reject) {\n          var res, data;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return axios.get(url);\n\n                case 3:\n                  res = _context.sent;\n                  data = res.data;\n                  resolve(data.map(function (post) {\n                    return _objectSpread({}, post, {\n                      createdAt: new Date(post.createdAt)\n                    });\n                  }));\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  reject(_context.t0);\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 8]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } // Create Posts\n\n  }, {\n    key: \"insertPost\",\n    value: function insertPost(text) {\n      return axios.post(url, {\n        text: text\n      });\n    } // Delete Posts\n\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(id) {\n      return axios.delete(\"\".concat(url).concat(id));\n    }\n  }]);\n\n  return PostService;\n}();\n\nexport default PostService;",{"version":3,"sources":["/Users/kevincox/Desktop/word-flow/client/src/PostService.js"],"names":["axios","require","url","PostService","resolve","reject","get","res","data","map","post","createdAt","Date","text","id","delete"],"mappings":";;;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CACA;;;AAEA,IAAMC,GAAG,GAAG,kCAAZ;;IAEMC,W;;;;;;;;;AACF;+BACkB;AACd,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEOL,KAAK,CAACM,GAAN,CAAUJ,GAAV,CAFP;;AAAA;AAELK,kBAAAA,GAFK;AAGLC,kBAAAA,IAHK,GAGED,GAAG,CAACC,IAHN;AAIXJ,kBAAAA,OAAO,CACHI,IAAI,CAACC,GAAL,CAAS,UAAAC,IAAI;AAAA,6CACNA,IADM;AAETC,sBAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASF,IAAI,CAACC,SAAd;AAFF;AAAA,mBAAb,CADG,CAAP;AAJW;AAAA;;AAAA;AAAA;AAAA;AAWXN,kBAAAA,MAAM,aAAN;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH,K,CACD;;;;+BACkBQ,I,EAAM;AACpB,aAAOb,KAAK,CAACU,IAAN,CAAWR,GAAX,EAAgB;AACnBW,QAAAA,IAAI,EAAJA;AADmB,OAAhB,CAAP;AAGH,K,CACD;;;;+BACkBC,E,EAAI;AAClB,aAAOd,KAAK,CAACe,MAAN,WAAgBb,GAAhB,SAAsBY,EAAtB,EAAP;AACH;;;;;;AAGL,eAAeX,WAAf","sourcesContent":["const axios = require('axios');\n//Full Stack Vue.js, Express & MongoDB [2] - Vue Frontend\n\nconst url = 'http://localhost:5000/api/posts/';\n\nclass PostService {\n    // Get Posts\n    static getPosts() { \n        return new Promise(async (resolve, reject) => {\n            try {\n                const res = await axios.get(url);\n                const data = res.data;\n                resolve(\n                    data.map(post => ({\n                        ...post,\n                        createdAt: new Date(post.createdAt)\n                    }))\n                );\n            } catch (err) {\n                reject(err);\n            }\n        })\n    }\n    // Create Posts\n    static insertPost(text) {\n        return axios.post(url, {\n            text\n        });\n    }\n    // Delete Posts\n    static deletePost(id) {\n        return axios.delete(`${url}${id}`);\n    }\n}\n\nexport default PostService;"]}]}