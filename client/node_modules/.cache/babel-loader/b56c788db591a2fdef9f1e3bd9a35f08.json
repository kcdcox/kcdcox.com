{"remainingRequest":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/thread-loader/dist/cjs.js!/Users/kevincox/Desktop/kcdcox.com/client/node_modules/babel-loader/lib/index.js!/Users/kevincox/Desktop/kcdcox.com/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kevincox/Desktop/kcdcox.com/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kevincox/Desktop/kcdcox.com/client/src/components/FindWords/Relativator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kevincox/Desktop/kcdcox.com/client/src/components/FindWords/Relativator.vue","mtime":1554773488353},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Service from \"../../Service\";\nexport default {\n  data: function data() {\n    return {\n      letters1: '',\n      letters2: '',\n      searched: false,\n      relation: [],\n      LeftLevel2: [],\n      LeftLevel3: [],\n      LeftLevel4: [],\n      RightLevel2: [],\n      RitghLevel3: [],\n      RightLevel4: [],\n      alf: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"?\"]\n    };\n  },\n  watch: {\n    letters1: function letters1() {\n      this.letters1 = this.letters1.toUpperCase();\n    },\n    letters2: function letters2() {\n      this.letters2 = this.letters2.toUpperCase();\n    },\n    searched: function searched() {\n      for (var x = 0; x < relation.data.word1.length; x++) {}\n    }\n  },\n  computed: {\n    checkChars1: function checkChars1() {\n      var wilds = 0;\n      var output = [];\n      var input = this.letters1;\n\n      for (var y = 0; y < input.length; y++) {\n        for (var i = 0; i < 27; i++) {\n          if (input[y] == this.alf[i] && i == 26 && wilds < 2) {\n            wilds++;\n          } else if (input[y] == this.alf[i] && i < 26) {\n            output.push(input[y]);\n            i++;\n          }\n        }\n      }\n\n      output = output.slice(0, 14 - wilds);\n      output.push(wilds.toString());\n      return output;\n    },\n    checkChars2: function checkChars2() {\n      var wilds = 0;\n      var output = [];\n      var input = this.letters2;\n\n      for (var y = 0; y < input.length; y++) {\n        for (var i = 0; i < 27; i++) {\n          if (input[y] == this.alf[i] && i == 26 && wilds < 2) {\n            wilds++;\n          } else if (input[y] == this.alf[i] && i < 26) {\n            output.push(input[y]);\n            i++;\n          }\n        }\n      }\n\n      output = output.slice(0, 14 - wilds);\n      output.push(wilds.toString());\n      return output;\n    }\n  },\n  methods: {\n    relativator: function () {\n      var _relativator = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.searched) {\n                  this.relation.splice(0);\n                }\n\n                _context.next = 3;\n                return Service.relativator(this.letters1, this.letters2);\n\n              case 3:\n                this.relation = _context.sent;\n                this.searched = true;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function relativator() {\n        return _relativator.apply(this, arguments);\n      }\n\n      return relativator;\n    }()\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return Service.relativator();\n\n            case 3:\n              this.relation = _context2.sent;\n              _context2.next = 9;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              this.error = _context2.t0.message;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[0, 6]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["Relativator.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<b-container fluid class=\"word-container lato purpBg\">\n<!--=================================================================FIND-WORDS===-->\n<b-row class=\"mt-5 pt-5 pb-0\" align-h=\"center\">\n\n  <h1 class=\"my-5 white fs30\">Relativator</h1>\n\n  <b-col cols=\"3\">\n    <b-form-input\n      class=\"fs16\"\n      placeholder=\"Enter letters...\"\n      type=\"text\"\n      v-on:keyup.enter=\"relativator\"\n      v-model=\"letters1\"/>\n\n      <!-- <p class=\"fs18 white\" v-if=\"(letters1.length==0)\">Enter the first word.</p>\n      <p class=\"fs18 white\" v-else>\n        {{checkChars1.slice(0,checkChars1.length - 1)}} and\n        {{parseInt(checkChars1.slice(checkChars1.length-1, checkChars1.length))}}\n        blank<span \n        v-if=\"parseInt(checkChars1.slice(checkChars1.length-1, checkChars1.length))!=1\">s</span>.\n      </p> -->\n  </b-col>\n\n  <b-col cols=\"3\">\n    <b-form-input\n      class=\"fs16\"\n      placeholder=\"Enter letters...\"\n      type=\"text\"\n      v-on:keyup.enter=\"relativator\"\n      v-model=\"letters2\"/>\n\n      <!-- <p class=\"fs18 white\" v-if=\"(letters2.length==0)\">Enter the second.</p>\n      <p class=\"fs18 white\" v-else>\n        {{checkChars2.slice(0,checkChars2.length - 1)}} and\n        {{parseInt(checkChars2.slice(checkChars2.length-1, checkChars2.length))}}\n        blank<span \n        v-if=\"parseInt(checkChars2.slice(checkChars2.length-1, checkChars2.length))!=1\">s</span>.\n      </p> -->\n  </b-col>\n\n  <b-col cols=\"3\">\n    <b-button \n      class=\"fs16 \" \n      v-on:click=\"relativator\">Get Relation\n    </b-button>\n  </b-col>\n\n  <b-row>\n    <p>{{relation.data}}</p>\n  </b-row>\n\n</b-row>\n</b-container>\n</template>\n<!--=================================================================================-->\n<!--=====================================================================SCRIPTS=====-->\n<!--=================================================================================-->\n<script>\n\nimport Service from \"../../Service\";\n\nexport default {\n  data() {\n    return{\n      letters1: '',\n      letters2: '',\n      searched: false,\n      relation: [],\n      LeftLevel2: [],\n      LeftLevel3: [],\n      LeftLevel4: [],\n      RightLevel2: [],\n      RitghLevel3: [],\n      RightLevel4: [],\n      alf: [\n        \"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\", \"H\",\"I\", \"J\", \"K\", \"L\", \"M\",\"N\", \"O\",\n        \"P\", \"Q\", \"R\",\"S\",\"T\",\"U\", \"V\",\"W\", \"X\",\"Y\", \"Z\", \"?\"\n      ]\n    };\n  },\n  watch: {\n    letters1()  {\n      this.letters1 = this.letters1.toUpperCase();\n    },\n    letters2() {\n      this.letters2 = this.letters2.toUpperCase();\n    },\n    searched() {\n      for(var x=0; x<relation.data.word1.length; x++){\n\n      }\n\n    }\n  },\n  computed: {\n    checkChars1() {\n      var wilds = 0;\n      var output = [];\n      var input = this.letters1;\n      for (var y = 0; y < input.length; y++) {\n        for (var i = 0; i < 27; i++) {\n          if (input[y] == this.alf[i] && i == 26 && wilds < 2) {\n            wilds++;\n          } else if (input[y] == this.alf[i] && i < 26) {\n            output.push(input[y]);\n            i++;\n          }\n        }\n      }\n      output = output.slice(0, 14 - wilds);\n      output.push(wilds.toString());\n      return output;\n    },\n    checkChars2() {\n      var wilds = 0;\n      var output = [];\n      var input = this.letters2;\n      for (var y = 0; y < input.length; y++) {\n        for (var i = 0; i < 27; i++) {\n          if (input[y] == this.alf[i] && i == 26 && wilds < 2) {\n            wilds++;\n          } else if (input[y] == this.alf[i] && i < 26) {\n            output.push(input[y]);\n            i++;\n          }\n        }\n      }\n      output = output.slice(0, 14 - wilds);\n      output.push(wilds.toString());\n      return output;\n    }\n  },\n  methods: {\n    async relativator() {\n      if (this.searched) {this.relation.splice(0);}\n      this.relation = await Service.relativator(this.letters1, this.letters2);\n      this.searched = true;\n    }\n  },\n  async created() {\n    try {\n      this.relation = await Service.relativator();\n    } catch (err) {\n      this.error = err.message;\n    }\n  }\n\n}\n</script>\n<!--=================================================================================-->\n<!--=====================================================================STYLING=====-->\n<!--=================================================================================-->\n<style>\n.word-container {\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  position: relative;\n  left: 0;\n  padding: 0;\n  top: 0px;\n  overflow:hidden;}\n</style>\n"],"sourceRoot":"src/components/FindWords"}]}