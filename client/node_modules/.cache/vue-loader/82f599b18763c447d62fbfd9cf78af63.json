{"remainingRequest":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kevincox/Desktop/kcdcox.com/client/src/components/FindWords/Relativator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kevincox/Desktop/kcdcox.com/client/src/components/FindWords/Relativator.vue","mtime":1554773488353},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/kcdcox.com/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Service from \"../../Service\";\n\nexport default {\n  data() {\n    return{\n      letters1: '',\n      letters2: '',\n      searched: false,\n      relation: [],\n      LeftLevel2: [],\n      LeftLevel3: [],\n      LeftLevel4: [],\n      RightLevel2: [],\n      RitghLevel3: [],\n      RightLevel4: [],\n      alf: [\n        \"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\", \"H\",\"I\", \"J\", \"K\", \"L\", \"M\",\"N\", \"O\",\n        \"P\", \"Q\", \"R\",\"S\",\"T\",\"U\", \"V\",\"W\", \"X\",\"Y\", \"Z\", \"?\"\n      ]\n    };\n  },\n  watch: {\n    letters1()  {\n      this.letters1 = this.letters1.toUpperCase();\n    },\n    letters2() {\n      this.letters2 = this.letters2.toUpperCase();\n    },\n    searched() {\n      for(var x=0; x<relation.data.word1.length; x++){\n\n      }\n\n    }\n  },\n  computed: {\n    checkChars1() {\n      var wilds = 0;\n      var output = [];\n      var input = this.letters1;\n      for (var y = 0; y < input.length; y++) {\n        for (var i = 0; i < 27; i++) {\n          if (input[y] == this.alf[i] && i == 26 && wilds < 2) {\n            wilds++;\n          } else if (input[y] == this.alf[i] && i < 26) {\n            output.push(input[y]);\n            i++;\n          }\n        }\n      }\n      output = output.slice(0, 14 - wilds);\n      output.push(wilds.toString());\n      return output;\n    },\n    checkChars2() {\n      var wilds = 0;\n      var output = [];\n      var input = this.letters2;\n      for (var y = 0; y < input.length; y++) {\n        for (var i = 0; i < 27; i++) {\n          if (input[y] == this.alf[i] && i == 26 && wilds < 2) {\n            wilds++;\n          } else if (input[y] == this.alf[i] && i < 26) {\n            output.push(input[y]);\n            i++;\n          }\n        }\n      }\n      output = output.slice(0, 14 - wilds);\n      output.push(wilds.toString());\n      return output;\n    }\n  },\n  methods: {\n    async relativator() {\n      if (this.searched) {this.relation.splice(0);}\n      this.relation = await Service.relativator(this.letters1, this.letters2);\n      this.searched = true;\n    }\n  },\n  async created() {\n    try {\n      this.relation = await Service.relativator();\n    } catch (err) {\n      this.error = err.message;\n    }\n  }\n\n}\n",{"version":3,"sources":["Relativator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Relativator.vue","sourceRoot":"src/components/FindWords","sourcesContent":["<template>\n<b-container fluid class=\"word-container lato purpBg\">\n<!--=================================================================FIND-WORDS===-->\n<b-row class=\"mt-5 pt-5 pb-0\" align-h=\"center\">\n\n  <h1 class=\"my-5 white fs30\">Relativator</h1>\n\n  <b-col cols=\"3\">\n    <b-form-input\n      class=\"fs16\"\n      placeholder=\"Enter letters...\"\n      type=\"text\"\n      v-on:keyup.enter=\"relativator\"\n      v-model=\"letters1\"/>\n\n      <!-- <p class=\"fs18 white\" v-if=\"(letters1.length==0)\">Enter the first word.</p>\n      <p class=\"fs18 white\" v-else>\n        {{checkChars1.slice(0,checkChars1.length - 1)}} and\n        {{parseInt(checkChars1.slice(checkChars1.length-1, checkChars1.length))}}\n        blank<span \n        v-if=\"parseInt(checkChars1.slice(checkChars1.length-1, checkChars1.length))!=1\">s</span>.\n      </p> -->\n  </b-col>\n\n  <b-col cols=\"3\">\n    <b-form-input\n      class=\"fs16\"\n      placeholder=\"Enter letters...\"\n      type=\"text\"\n      v-on:keyup.enter=\"relativator\"\n      v-model=\"letters2\"/>\n\n      <!-- <p class=\"fs18 white\" v-if=\"(letters2.length==0)\">Enter the second.</p>\n      <p class=\"fs18 white\" v-else>\n        {{checkChars2.slice(0,checkChars2.length - 1)}} and\n        {{parseInt(checkChars2.slice(checkChars2.length-1, checkChars2.length))}}\n        blank<span \n        v-if=\"parseInt(checkChars2.slice(checkChars2.length-1, checkChars2.length))!=1\">s</span>.\n      </p> -->\n  </b-col>\n\n  <b-col cols=\"3\">\n    <b-button \n      class=\"fs16 \" \n      v-on:click=\"relativator\">Get Relation\n    </b-button>\n  </b-col>\n\n  <b-row>\n    <p>{{relation.data}}</p>\n  </b-row>\n\n</b-row>\n</b-container>\n</template>\n<!--=================================================================================-->\n<!--=====================================================================SCRIPTS=====-->\n<!--=================================================================================-->\n<script>\n\nimport Service from \"../../Service\";\n\nexport default {\n  data() {\n    return{\n      letters1: '',\n      letters2: '',\n      searched: false,\n      relation: [],\n      LeftLevel2: [],\n      LeftLevel3: [],\n      LeftLevel4: [],\n      RightLevel2: [],\n      RitghLevel3: [],\n      RightLevel4: [],\n      alf: [\n        \"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\", \"H\",\"I\", \"J\", \"K\", \"L\", \"M\",\"N\", \"O\",\n        \"P\", \"Q\", \"R\",\"S\",\"T\",\"U\", \"V\",\"W\", \"X\",\"Y\", \"Z\", \"?\"\n      ]\n    };\n  },\n  watch: {\n    letters1()  {\n      this.letters1 = this.letters1.toUpperCase();\n    },\n    letters2() {\n      this.letters2 = this.letters2.toUpperCase();\n    },\n    searched() {\n      for(var x=0; x<relation.data.word1.length; x++){\n\n      }\n\n    }\n  },\n  computed: {\n    checkChars1() {\n      var wilds = 0;\n      var output = [];\n      var input = this.letters1;\n      for (var y = 0; y < input.length; y++) {\n        for (var i = 0; i < 27; i++) {\n          if (input[y] == this.alf[i] && i == 26 && wilds < 2) {\n            wilds++;\n          } else if (input[y] == this.alf[i] && i < 26) {\n            output.push(input[y]);\n            i++;\n          }\n        }\n      }\n      output = output.slice(0, 14 - wilds);\n      output.push(wilds.toString());\n      return output;\n    },\n    checkChars2() {\n      var wilds = 0;\n      var output = [];\n      var input = this.letters2;\n      for (var y = 0; y < input.length; y++) {\n        for (var i = 0; i < 27; i++) {\n          if (input[y] == this.alf[i] && i == 26 && wilds < 2) {\n            wilds++;\n          } else if (input[y] == this.alf[i] && i < 26) {\n            output.push(input[y]);\n            i++;\n          }\n        }\n      }\n      output = output.slice(0, 14 - wilds);\n      output.push(wilds.toString());\n      return output;\n    }\n  },\n  methods: {\n    async relativator() {\n      if (this.searched) {this.relation.splice(0);}\n      this.relation = await Service.relativator(this.letters1, this.letters2);\n      this.searched = true;\n    }\n  },\n  async created() {\n    try {\n      this.relation = await Service.relativator();\n    } catch (err) {\n      this.error = err.message;\n    }\n  }\n\n}\n</script>\n<!--=================================================================================-->\n<!--=====================================================================STYLING=====-->\n<!--=================================================================================-->\n<style>\n.word-container {\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  position: relative;\n  left: 0;\n  padding: 0;\n  top: 0px;\n  overflow:hidden;}\n</style>\n"]}]}