{"remainingRequest":"/Users/kevincox/Desktop/word-flow/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kevincox/Desktop/word-flow/client/src/components/PostComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kevincox/Desktop/word-flow/client/src/components/PostComponent.vue","mtime":1552266952558},{"path":"/Users/kevincox/Desktop/word-flow/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/word-flow/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/word-flow/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kevincox/Desktop/word-flow/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PostService from '../PostService';\n\nexport default {\n  name: 'PostComponent',\n  data() {\n    return {\n      posts: [],\n      error: '',\n      text: ''\n    }\n  },\n  async created() {\n    try{  this.posts = await PostService.getPosts();\n    } catch(err){ this.error = err.message;}\n  },\n  methods: {\n    async createPost() {\n      await PostService.insertPost(this.text); \n      this.posts = await PostService.getPosts();\n    },\n    async deletePost(id) {\n      await PostService.deletePost(id);\n      this.posts = await PostService.getPosts();\n    }\n  }\n}\n",{"version":3,"sources":["PostComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n   <div class=\"container\">\n    <h1>Latest Posts</h1> \n    <div class=\"create-post\">\n      <label for=\"create-post\">Say Something...</label> \n        <input type=\"text\" id=\"create-post\" v-model=\"text\" placeholder=\"create post..\">\n        <button v-on:click=\"createPost\">Post!</button>\n    </div>\n    <hr>\n    <p class=\"error\" v-if=\"error\"> {{error}}</p>\n    <div class=\"posts-container\">\n        <div class=\"posts\" \n          v-for=\"(post, index) in posts\"\n          v-bind:item=\"post\"\n          v-bind:index=\"index\"\n          v-bind:key=\"post._id\"\n          v-on:dblclick=\"deletePost(post._id)\"\n        > \n          {{ `${post.createdAt.getDate()}/\n          ${post.createdAt.getMonth()}/\n          ${post.createdAt.getFullYear()}` }}\n          <p class=\"text\">{{post.text}}</p>\n        </div> \n      </div>    \n   </div>\n</template>\n\n<script>\nimport PostService from '../PostService';\n\nexport default {\n  name: 'PostComponent',\n  data() {\n    return {\n      posts: [],\n      error: '',\n      text: ''\n    }\n  },\n  async created() {\n    try{  this.posts = await PostService.getPosts();\n    } catch(err){ this.error = err.message;}\n  },\n  methods: {\n    async createPost() {\n      await PostService.insertPost(this.text); \n      this.posts = await PostService.getPosts();\n    },\n    async deletePost(id) {\n      await PostService.deletePost(id);\n      this.posts = await PostService.getPosts();\n    }\n  }\n}\n</script>\n\n<style scoped>\ndiv.container {\n  max-width: 100%;\n  margin: 0 auto;\n}\np.error {\n  border: 1px solid red;\n  background-color: pink;\n  padding: 10px;\n  margin-bottom: 15px;\n}\ndiv.posts{\n  position: relative;\n  border: 1px solid green;\n  background-color: #4cc78e;\n  padding:10px 10px 30px 10px;\n  margin-bottom: 15px;\n}\ndiv.created-at{\n  position:absolute;\n  top:0;\n  left:0;\n  padding: 5px 15px 5px 10px;\n  background-color: darkgreen;\n  color: white;\n  font-size: 13px;\n}\np.text{\n  font-size: 22px;\n  font-weight:700;\n  margin-bottom: 0;\n}\n</style>\n"]}]}